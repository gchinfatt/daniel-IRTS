@model DanielIncidentReporting.Models.IncidentReport

@{
    ViewBag.Title = "Report Incident";
}

<h2>Report an Incident</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Incident Report</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.incidentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.incidentDate, new { htmlAttributes = new { @class = "form-control" } })
                
                @Html.ValidationMessageFor(model => model.incidentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.programName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.programName, new SelectList(new List<Object>
                {
                  new { value = "SIPP", text = "SIPP"},
                  new { value = "BMP", text = "Behavior Management"},    
                  new { value = "CMO", text = "Case Management Organization"},
                  new { value = "FFI", text = "Families Fostering Independence"},
                  new { value = "FBT", text = "Family Based Treatment"},
                  new { value = "FSS", text = "Full Service Schools"},
                  new { value = "Prevention(STEPS)", text = "Prevention (STEPS)"},
                  new { value = "PP", text = "Project Prepare"},
                  new { value = "CMH", text = "TCM/Outpatient/TBOS/BNET"},
                  new { value = "JS", text = "Journey To Success"},
                  new { value = "DA - Belfort", text = "Daniel Academy - Belfort"},
                  new { value = "Admin", text = "Other"}
                },"value", "text", 2))
                @Html.ValidationMessageFor(model => model.programName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.incidentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.incidentType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.incidentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            
            @Html.LabelFor(model => model.reporterFirstName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.reporterFirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.reporterFirstName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reporterLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.reporterLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.reporterLastName, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}


